<Window x:Class="Safe.Keypad"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"  
             xmlns:Safe="clr-namespace:Safe"
             Height="450" Width="300" WindowStyle="None" Background="LightBlue" x:Name="KeyPad">
  <Window.Resources>
    <SolidColorBrush x:Key="Background">LightBlue</SolidColorBrush>
    <SolidColorBrush x:Key="Foreground">Black</SolidColorBrush>
    <SolidColorBrush x:Key="BackgroundContrast">White</SolidColorBrush>
    <Safe:GreaterEqualToBoolConverter x:Key="GEEval" />
    <!-- Button Style -->
    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
      <Setter Property="Button.Background" Value="{StaticResource Background}" />
      <Setter Property="Button.BorderBrush" Value="{DynamicResource BackgroundContrast}" />
      <Style.Triggers>
        <Trigger Property="IsPressed" Value="true">
          <Setter Property="Background" Value="{DynamicResource BackgroundContrast}" />
        </Trigger>
      </Style.Triggers>
    </Style>
    
      <!-- ProgressBar Style -->
    <Style x:Key="KeypadProgressBar" TargetType="{x:Type ProgressBar}">
      <Setter Property="ProgressBar.Background" Value="{StaticResource Background}" />
      <Setter Property="ProgressBar.BorderBrush" Value="{DynamicResource BackgroundContrast}" />      
    </Style>
    <ControlTemplate x:Key="RoundButton" TargetType="{x:Type Button}">
      <Grid>
        <Ellipse x:Name="OuterCircle" Width="65" Height="65" HorizontalAlignment="center" VerticalAlignment="center" Fill="{TemplateBinding BorderBrush}"/>
        <Ellipse x:Name="InnerCircle" Width="62" Height="62" HorizontalAlignment="center" VerticalAlignment="center" Fill="{TemplateBinding Background}"/>
        <Viewbox>
          <ContentControl Margin="4" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" TextBlock.FontSize="3"/>
        </Viewbox>
       </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="RoundButtonNoBorder" TargetType="{x:Type Button}">
      <Grid>
        <Ellipse x:Name="InnerCircle" Width="65" Height="65" HorizontalAlignment="center" VerticalAlignment="center" Fill="{TemplateBinding Background}" />
        <Viewbox>
          <ContentControl Margin="4" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" TextBlock.FontSize="3"/>
        </Viewbox>
       </Grid>
    </ControlTemplate>
    
      <!-- CheckBox Style -->
    <Style TargetType ="{x:Type CheckBox}">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType ="{x:Type CheckBox}">
            <Grid>
              <Ellipse x:Name="OuterCircle" Width="13" Height="13" Fill="{TemplateBinding BorderBrush}" />
              <Ellipse x:Name="InnerCircle" Width="9" Height="9" Fill="{TemplateBinding Background}" />
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="IsChecked" Value="true">
                  <Setter TargetName="InnerCircle" Property="Fill" Value="{DynamicResource BackgroundContrast}"/>
              </Trigger>
           </ControlTemplate.Triggers>
           </ControlTemplate>
          </Setter.Value>
        </Setter>
    </Style>
    
      <!-- DiscreteMarkProgressBar style -->
    <Style TargetType="{x:Type Safe:DiscreteMarkProgressBar}">
       <Setter Property="Background" Value="{StaticResource Background}" />
       <Setter Property="BorderBrush" Value="{DynamicResource BackgroundContrast}" />      
       <Setter Property="Width" Value="12" />      
       <Setter Property="Height" Value="12" />      
       <Setter Property="VerticalAlignment" Value="center" />      
       <Setter Property="HorizontalAlignment" Value="center" />      
       <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Safe:DiscreteMarkProgressBar}">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition></ColumnDefinition>
                  <ColumnDefinition></ColumnDefinition>
                  <ColumnDefinition></ColumnDefinition>
                  <ColumnDefinition></ColumnDefinition>
                  <ColumnDefinition></ColumnDefinition>
                  <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <CheckBox x:Name="Circle0" Grid.Column="0" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"/>
                <CheckBox x:Name="Circle1" Grid.Column="1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"/>
                <CheckBox x:Name="Circle2" Grid.Column="2" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"/>
                <CheckBox x:Name="Circle3" Grid.Column="3" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"/>
                <CheckBox x:Name="Circle4" Grid.Column="4" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"/>
                <CheckBox x:Name="Circle5" Grid.Column="5" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"/>
              </Grid>
              <ControlTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=Value, RelativeSource={RelativeSource Self}, Converter={StaticResource GEEval}, ConverterParameter=1}" Value="True">
                   <Setter TargetName="Circle0" Property="IsChecked" Value="True" ></Setter>
                 </DataTrigger>
                <DataTrigger Binding="{Binding Path=Value, RelativeSource={RelativeSource Self}, Converter={StaticResource GEEval}, ConverterParameter=2}" Value="True">
                  <Setter TargetName="Circle1" Property="IsChecked" Value="True" ></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Value, RelativeSource={RelativeSource Self}, Converter={StaticResource GEEval}, ConverterParameter=3}" Value="True">
                  <Setter TargetName="Circle2" Property="IsChecked" Value="True" ></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Value, RelativeSource={RelativeSource Self}, Converter={StaticResource GEEval}, ConverterParameter=4}" Value="True">
                  <Setter TargetName="Circle3" Property="IsChecked" Value="True" ></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Value, RelativeSource={RelativeSource Self}, Converter={StaticResource GEEval}, ConverterParameter=5}" Value="True">
                  <Setter TargetName="Circle4" Property="IsChecked" Value="True" ></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Value, RelativeSource={RelativeSource Self}, Converter={StaticResource GEEval}, ConverterParameter=6}" Value="True">
                  <Setter TargetName="Circle5" Property="IsChecked" Value="True" ></Setter>
                </DataTrigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
  </Window.Resources>
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition />
        <RowDefinition />
        <RowDefinition />
        <RowDefinition />
        <RowDefinition />
        <RowDefinition />
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition />
        <ColumnDefinition />
        <ColumnDefinition />
      </Grid.ColumnDefinitions>
      <Grid Grid.Row="0" Grid.ColumnSpan="3">
        <Label x:Name="TitleLbl" HorizontalAlignment="center" VerticalAlignment="center" FontSize="20"></Label>
      </Grid>
      <Button x:Name="Btn1" Grid.Row="1" Grid.Column="0" Template="{StaticResource RoundButton}" Click="Btn1_OnClick" Style="{StaticResource ButtonStyle}">1</Button>
      <Button x:Name="Btn2" Grid.Row="1" Grid.Column="1" Template="{StaticResource RoundButton}" Click="Btn2_OnClick" Style="{StaticResource ButtonStyle}">2</Button>
      <Button x:Name="Btn3" Grid.Row="1" Grid.Column="2" Template="{StaticResource RoundButton}" Click="Btn3_OnClick" Style="{StaticResource ButtonStyle}">3</Button>
      <Button x:Name="Btn4" Grid.Row="2" Grid.Column="0" Template="{StaticResource RoundButton}" Click="Btn4_OnClick" Style="{StaticResource ButtonStyle}">4</Button>
      <Button x:Name="Btn5" Grid.Row="2" Grid.Column="1" Template="{StaticResource RoundButton}" Click="Btn5_OnClick" Style="{StaticResource ButtonStyle}">5</Button>
      <Button x:Name="Btn6" Grid.Row="2" Grid.Column="2" Template="{StaticResource RoundButton}" Click="Btn6_OnClick" Style="{StaticResource ButtonStyle}">6</Button>
      <Button x:Name="Btn7" Grid.Row="3" Grid.Column="0" Template="{StaticResource RoundButton}" Click="Btn7_OnClick" Style="{StaticResource ButtonStyle}">7</Button>
      <Button x:Name="Btn8" Grid.Row="3" Grid.Column="1" Template="{StaticResource RoundButton}" Click="Btn8_OnClick" Style="{StaticResource ButtonStyle}">8</Button>
      <Button x:Name="Btn9" Grid.Row="3" Grid.Column="2" Template="{StaticResource RoundButton}" Click="Btn9_OnClick" Style="{StaticResource ButtonStyle}">9</Button>
      <Button x:Name="BtnCancel" Grid.Row="4" Grid.Column="0" Template="{StaticResource RoundButtonNoBorder}" IsCancel="True" Style="{StaticResource ButtonStyle}">Cancel</Button>
      <Button x:Name="Btn0" Grid.Row="4" Grid.Column="1" Template="{StaticResource RoundButton}" Click="Btn0_OnClick" Style="{StaticResource ButtonStyle}">0</Button>
      <Button x:Name="BtnDel" Grid.Row="4" Grid.Column="2" Template="{StaticResource RoundButtonNoBorder}" Click="BtnDel_OnClick" Style="{StaticResource ButtonStyle}" IsEnabled="{Binding ElementName=KeyPad, Path=DigitCount, Converter={StaticResource GEEval}, ConverterParameter=1}">Del</Button>
      <Grid Grid.Row="5" Grid.ColumnSpan="3">
        <Safe:DiscreteMarkProgressBar x:Name="discreteMarkProgressBar" HorizontalAlignment="center" VerticalAlignment="center" Minimum="0" Maximum="6" MinWidth="150" MaxWidth="150" MinHeight="15" MaxHeight="15"  Value="{Binding ElementName=KeyPad, Path=DigitCount}" NumberMarks="6">
         </Safe:DiscreteMarkProgressBar>
      </Grid>
      </Grid>
</Window>
